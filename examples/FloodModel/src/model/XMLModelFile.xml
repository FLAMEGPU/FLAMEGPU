<?xml version="1.0" encoding="utf-8"?>
<gpu:xmodel xmlns:gpu="http://www.dcs.shef.ac.uk/~paul/XMMLGPU"
        xmlns="http://www.dcs.shef.ac.uk/~paul/XMML">
  <name>flood</name>
  <gpu:environment>
    <gpu:constants>

      <gpu:variable>
        <type>double</type>
        <name>TIMESTEP</name>
      </gpu:variable>

      <gpu:variable>
        <type>double</type>
        <name>DXL</name>
      </gpu:variable>

      <gpu:variable>
        <type>double</type>
        <name>DYL</name>
      </gpu:variable>


    </gpu:constants>

    <gpu:functionFiles>
      <file>functions.c</file>
    </gpu:functionFiles>
  </gpu:environment>
  <xagents>
    <gpu:xagent>
      <name>FloodCell</name>
      <memory>
        <gpu:variable>
          <type>int</type>
          <name>inDomain</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <!-- the type 'int' changed to 'float' MS01Sep2017-->
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>y</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>z0</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>h</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qx</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qy</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>timeStep</name>
          <!--This is to assign dynamic adaptive 'dt' with respect to CFL and velocities -  MS01Sep2017-->
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>minh_loc</name>
          <!--This is to assign dynamic 'hmin' with respect to LFVs - MS01Sep2017-->
        </gpu:variable>


        <!-- EAST LFV-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_E</name>
        </gpu:variable>
        
        <gpu:variable>
          <type>double</type>
          <name>etFace_E</name>
        </gpu:variable>

        <gpu:variable>
          <type>double</type>
          <name>qxFace_E</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qyFace_E</name>
        </gpu:variable>

        <!-- WEST LFV-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_W</name>
        </gpu:variable>
        
        <gpu:variable>
          <type>double</type>
          <name>etFace_W</name>
        </gpu:variable>

        <gpu:variable>
          <type>double</type>
          <name>qxFace_W</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qyFace_W</name>
        </gpu:variable>

        <!-- NORTH LFV-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_N</name>
        </gpu:variable>
        
        <gpu:variable>
          <type>double</type>
          <name>etFace_N</name>
        </gpu:variable>

        <gpu:variable>
          <type>double</type>
          <name>qxFace_N</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qyFace_N</name>
        </gpu:variable>

        <!-- SOUTH LFV-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_S</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>etFace_S</name>
        </gpu:variable>

        <gpu:variable>
          <type>double</type>
          <name>qxFace_S</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qyFace_S</name>
        </gpu:variable>


        <!--<gpu:variable>
          <type>bool</type>
          <name>isDry</name>
          --><!--Needed for Wet and Dry message function--><!--
        </gpu:variable>-->


      </memory>
      <functions>

        <gpu:function>
          <name>PrepareSpaceOperator</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <outputs>
            <gpu:output>
              <messageName>SpaceOperatorMessage</messageName>
              <gpu:type>single_message</gpu:type>
            </gpu:output>
          </outputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>

        <gpu:function>
          <name>ProcessSpaceOperatorMessage</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <inputs>
            <gpu:input>
              <messageName>SpaceOperatorMessage</messageName>
            </gpu:input>
          </inputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>



        <gpu:function>
          <name>PrepareWetDry</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <outputs>
            <gpu:output>
              <messageName>WetDryMessage</messageName>
              <gpu:type>single_message</gpu:type>
            </gpu:output>
          </outputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>

        <gpu:function>
          <name>ProcessWetDryMessage</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <inputs>
            <gpu:input>
              <messageName>WetDryMessage</messageName>
            </gpu:input>
          </inputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>



        <gpu:function>
          <name>PrepareLFV</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <outputs>
            <gpu:output>
              <messageName>LFVMessage</messageName>
              <gpu:type>single_message</gpu:type>
            </gpu:output>
          </outputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>

        <gpu:function>
          <name>ProcessLFVMessage</name>
          <currentState>Default</currentState>
          <nextState>Default</nextState>
          <inputs>
            <gpu:input>
              <messageName>LFVMessage</messageName>
            </gpu:input>
          </inputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>


      </functions>
      <states>
        <gpu:state>
          <name>Default</name>
        </gpu:state>
        <initialState>Default</initialState>
      </states>
      <gpu:type>discrete</gpu:type>
      <gpu:bufferSize>262144</gpu:bufferSize>
    </gpu:xagent>

  </xagents>


  <messages>

    <gpu:message>
      <name>SpaceOperatorMessage</name>
      <variables>
        <gpu:variable>
          <type>int</type>
          <name>inDomain</name>
          <!--Check why?! MS01Sep2017-->
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>y</name>
        </gpu:variable>


        <!--EAST-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_E</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>etFace_E</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_X_E</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_Y_E</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>


        <!--WEST-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_W</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>etFace_W</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_X_W</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_Y_W</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>


        <!--NORTH-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_N</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>etFace_N</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_X_N</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_Y_N</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>


        <!--SOUTH-->
        <gpu:variable>
          <type>double</type>
          <name>hFace_S</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>etFace_S</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_X_S</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qFace_Y_S</name>
          <!-- Different from those in Agent memory "MS01Sep2017" This is to apply boundary conditions (not sure yet)-->
        </gpu:variable>
      </variables>

      <gpu:partitioningDiscrete>
        <gpu:radius>1</gpu:radius>
      </gpu:partitioningDiscrete>
      <gpu:bufferSize>262144</gpu:bufferSize>
    </gpu:message>

    <gpu:message>
      <name>WetDryMessage</name>
      <variables>
        <gpu:variable>
          <type>int</type>
          <name>inDomain</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>y</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>min_hloc</name>
          <!--This is different from that of the agent memory _ Messaging sake ("MS01Sep2017") - can be revised later -->
        </gpu:variable>
      </variables>
      <gpu:partitioningDiscrete>
        <gpu:radius>1</gpu:radius>
      </gpu:partitioningDiscrete>
      <gpu:bufferSize>262144</gpu:bufferSize>
    </gpu:message>


    <gpu:message>
      <name>LFVMessage</name>
      <variables>
        <gpu:variable>
          <type>int</type>
          <name>inDomain</name>
          <!-- the use to be Checked in the code MS01Sep2017-->
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>y</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>z0</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>h</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qx</name>
        </gpu:variable>
        <gpu:variable>
          <type>double</type>
          <name>qy</name>
        </gpu:variable>
      </variables>
      <gpu:partitioningDiscrete>
        <gpu:radius>1</gpu:radius>
      </gpu:partitioningDiscrete>
      <gpu:bufferSize>262144</gpu:bufferSize>
    </gpu:message>
  </messages>

  <layers>
    <layer>
      <!--execution sequence depends on the introduction order MS01Sep2017-->
      <gpu:layerFunction>
        <name>PrepareWetDry</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessWetDryMessage</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>PrepareLFV</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessLFVMessage</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>PrepareSpaceOperator</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessSpaceOperatorMessage</name>
      </gpu:layerFunction>
    </layer>
    <layer>
      <gpu:layerFunction>
        <name>PrepareWetDry</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessWetDryMessage</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>PrepareLFV</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessLFVMessage</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>PrepareSpaceOperator</name>
      </gpu:layerFunction>
      <gpu:layerFunction>
        <name>ProcessSpaceOperatorMessage</name>
      </gpu:layerFunction>
    </layer>
  </layers>

</gpu:xmodel>
