<?xml version="1.0" encoding="utf-8"?>
<gpu:xmodel xmlns:gpu="http://www.dcs.shef.ac.uk/~paul/XMMLGPU"
        xmlns="http://www.dcs.shef.ac.uk/~paul/XMML">
	<name>Keratinocyte</name>
	<gpu:environment>
		<gpu:constants>
			<gpu:variable>
				<type>float</type>
				<name>calcium_level</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>CYCLE_LENGTH</name>
				<arrayLength>5</arrayLength>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>SUBSTRATE_FORCE</name>
				<arrayLength>5</arrayLength>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>DOWNWARD_FORCE</name>
				<arrayLength>5</arrayLength>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>FORCE_MATRIX</name>
				<arrayLength>25</arrayLength>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>FORCE_REP</name>
			</gpu:variable>
			<gpu:variable>
				<type>float</type>
				<name>FORCE_DAMPENER</name>
			</gpu:variable>
			<gpu:variable>
				<type>int</type>
				<name>BASEMENT_MAX_Z</name>
			</gpu:variable>
		</gpu:constants>
		<gpu:functionFiles>
			<file>functions.c</file>
		</gpu:functionFiles>
		<gpu:initFunctions>
			<gpu:initFunction>
				<gpu:name>setConstants</gpu:name>
			</gpu:initFunction>
		</gpu:initFunctions>
	</gpu:environment>

	<xagents>
		<gpu:xagent>
			<name>keratinocyte</name>
			<memory>
				<gpu:variable>
					<type>int</type>
					<name>id</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>type</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>x</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>y</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>z</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>force_x</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>force_y</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>force_z</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>num_xy_bonds</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>num_z_bonds</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>num_stem_bonds</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>cycle</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>diff_noise_factor</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>dead_ticks</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>contact_inhibited_ticks</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>motility</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>dir</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>movement</name>
				</gpu:variable>
			</memory>
			<functions>

				<gpu:function>
					<name>output_location</name>
					<currentState>resolve</currentState>
					<nextState>default</nextState>
					<outputs>
						<gpu:output>
							<messageName>location</messageName>
							<gpu:type>single_message</gpu:type>
						</gpu:output>
					</outputs>
					
					<!-- If this condition is met by all agents then they will perform the default agent functions. If not they will resolve forces and return back to this first function -->
					<gpu:globalCondition>
						<lhs>
							<agentVariable>movement</agentVariable>
						</lhs>
						<operator>&lt;</operator>
						<rhs>
							<value>0.25</value>
						</rhs>
						<gpu:maxItterations>200</gpu:maxItterations>
						<gpu:mustEvaluateTo>true</gpu:mustEvaluateTo>
					</gpu:globalCondition>
					
					<gpu:reallocate>false</gpu:reallocate>
					
				</gpu:function>

				<gpu:function>
					<name>cycle</name>
					<currentState>default</currentState>
					<nextState>default</nextState>
					<xagentOutputs>
						<gpu:xagentOutput>
							<xagentName>keratinocyte</xagentName>
							<state>default</state>
						</gpu:xagentOutput>
					</xagentOutputs>
					<gpu:reallocate>false</gpu:reallocate>
					<gpu:RNG>true</gpu:RNG>
				</gpu:function>

				<gpu:function>
					<name>differentiate</name>
					<currentState>default</currentState>
					<nextState>default</nextState>
					<inputs>
						<gpu:input>
							<messageName>location</messageName>
						</gpu:input>
					</inputs>
					<gpu:reallocate>false</gpu:reallocate>
				</gpu:function>

				<gpu:function>
					<name>death_signal</name>
					<currentState>default</currentState>
					<nextState>default</nextState>
					<inputs>
						<gpu:input>
							<messageName>location</messageName>
						</gpu:input>
					</inputs>
					<gpu:reallocate>false</gpu:reallocate>
					<gpu:RNG>true</gpu:RNG>
				</gpu:function>

				<gpu:function>
					<name>migrate</name>
					<currentState>default</currentState>
					<nextState>resolve</nextState>
					<inputs>
						<gpu:input>
							<messageName>location</messageName>
						</gpu:input>
					</inputs>
					<gpu:reallocate>false</gpu:reallocate>
					<gpu:RNG>true</gpu:RNG>
				</gpu:function>

				<gpu:function>
					<name>force_resolution_output</name>
					<currentState>resolve</currentState>
					<nextState>resolve</nextState>
					<outputs>
						<gpu:output>
							<messageName>force</messageName>
							<gpu:type>single_message</gpu:type>
						</gpu:output>
					</outputs>
					<gpu:reallocate>false</gpu:reallocate>
				</gpu:function>

				<gpu:function>
					<name>resolve_forces</name>
					<currentState>resolve</currentState>
					<nextState>resolve</nextState>
					<inputs>
						<gpu:input>
							<messageName>force</messageName>
						</gpu:input>
					</inputs>
					<gpu:reallocate>false</gpu:reallocate>
				</gpu:function>

			</functions>

			<states>
				<gpu:state>
					<name>default</name>
					<description>represents a normal cell which is resolved</description>
				</gpu:state>
				<gpu:state>
					<name>resolve</name>
					<description>when in this state the agent needs to be resolved</description>
				</gpu:state>
				<initialState>resolve</initialState>
			</states>
			
			<gpu:type>continuous</gpu:type>
			<gpu:bufferSize>8192</gpu:bufferSize>
			
		</gpu:xagent>
	</xagents>

	<messages>
		<gpu:message>
			<name>location</name>
			<variables>
				<gpu:variable>
					<type>int</type>
					<name>id</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>type</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>x</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>y</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>z</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>dir</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>motility</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>range</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>iteration</name>
				</gpu:variable>
			</variables>
			<gpu:partitioningSpatial>
				<gpu:radius>125</gpu:radius>
				<gpu:xmin>0.0</gpu:xmin>
				<gpu:xmax>500</gpu:xmax>
				<gpu:ymin>0.0</gpu:ymin>
				<gpu:ymax>500</gpu:ymax>
				<gpu:zmin>0.0</gpu:zmin>
				<gpu:zmax>500</gpu:zmax>
			</gpu:partitioningSpatial>
			<gpu:bufferSize>8192</gpu:bufferSize>
		</gpu:message>
		
		<gpu:message>
			<name>force</name>
			<variables>
				<gpu:variable>
					<type>int</type>
					<name>type</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>x</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>y</name>
				</gpu:variable>
				<gpu:variable>
					<type>float</type>
					<name>z</name>
				</gpu:variable>
				<gpu:variable>
					<type>int</type>
					<name>id</name>
				</gpu:variable>
			</variables>
			<gpu:partitioningSpatial>
				<gpu:radius>15.625</gpu:radius>
				<gpu:xmin>0.0</gpu:xmin>
				<gpu:xmax>500</gpu:xmax>
				<gpu:ymin>0.0</gpu:ymin>
				<gpu:ymax>500</gpu:ymax>
				<gpu:zmin>0.0</gpu:zmin>
				<gpu:zmax>500</gpu:zmax>
			</gpu:partitioningSpatial>
			<gpu:bufferSize>8192</gpu:bufferSize>
		</gpu:message>
	</messages>

	<layers>
		<layer>
			<gpu:layerFunction>
				<name>output_location</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>cycle</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>differentiate</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>death_signal</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>migrate</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>force_resolution_output</name>
			</gpu:layerFunction>
		</layer>
		
		<layer>
			<gpu:layerFunction>
				<name>resolve_forces</name>
			</gpu:layerFunction>
		</layer>
	</layers>

</gpu:xmodel>
